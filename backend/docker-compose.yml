version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: container-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: minha_base
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"

  backend:
    container_name: container-backend
#    command: npm run dev
    build:
      context: .
      target: ${NODE_ENV:-development}
    image: imagem-backend:1.0.0
    ports:
      - "3300:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/minha_base
      API_KEY: ${API_KEY}
      OTHER_SECRET: ${OTHER_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    volumes:
      - .:/app
      - backend_node_modules:/app/node_modules
      - backend_next:/app/.next
      
    command: >
      sh -c "
        echo '[backend] Aguardando Postgres...' &&
        until nc -z postgres 5432; do
          echo '... ainda aguardando';
          sleep 2;
        done &&
        echo '[backend] Rodando Prisma migrate...' &&
        npx prisma migrate dev --name init &&
        echo '[backend] Iniciando backend com npm run dev...' &&
        npm run dev
      "      
    depends_on:
      - postgres
    networks:
      - app-network
      
volumes:
  pgdata:
    name: postgres_pgdata
  backend_node_modules:
    name: backend_node_modules
  backend_next:
    name: backend_next

networks:
  app-network:
    external:
      name: minha-rede