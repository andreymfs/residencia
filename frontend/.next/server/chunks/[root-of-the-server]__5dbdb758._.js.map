{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Desktop/residencia/frontend/src/lib/auth.ts"],"sourcesContent":["import { NextAuthOptions } from \"next-auth\"\nimport CredentialsProvider from \"next-auth/providers/credentials\"\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n    CredentialsProvider({\n      name: \"Credentials\",\n      credentials: {\n        email: { label: \"Email\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" }\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.password) {\n          throw new Error(\"Missing credentials\")\n        }\n\n        try {\n          const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/auth/login`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              email: credentials.email,\n              password: credentials.password,\n            }),\n          })\n\n          if (!response.ok) {\n            const error = await response.json()\n            throw new Error(error.error || \"Authentication failed\")\n          }\n\n          const data = await response.json()\n\n          if (!data.user || !data.token) {\n            throw new Error(\"Invalid response from server\")\n          }\n\n          return {\n            id: data.user.id,\n            name: data.user.name,\n            email: data.user.email,\n            role: data.user.role,\n            token: data.token,\n          }\n        } catch (error) {\n          console.error(\"Authentication error:\", error)\n          throw new Error(error instanceof Error ? error.message : \"Authentication failed\")\n        }\n      }\n    })\n  ],\n  pages: {\n    signIn: '/auth/signin',\n    error: '/auth/error',\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.id = user.id\n        token.role = user.role\n        token.accessToken = user.token\n      }\n      return token\n    },\n    async session({ session, token }) {\n      if (session?.user) {\n        session.user.id = token.id as string\n        session.user.role = token.role as string\n        session.accessToken = token.accessToken as string\n      }\n      return session\n    }\n  },\n  session: {\n    strategy: \"jwt\",\n    maxAge: 30 * 24 * 60 * 60, // 30 days\n  },\n  debug: process.env.NODE_ENV === 'development',\n}\n"],"names":[],"mappings":";;;AACA;;AAEO,MAAM,cAA+B;IAC1C,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAO;gBACtC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;oBACjD,MAAM,IAAI,MAAM;gBAClB;gBAEA,IAAI;oBACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,mBAAmB,CAAC,eAAe,CAAC,EAAE;wBAChF,QAAQ;wBACR,SAAS;4BACP,gBAAgB;wBAClB;wBACA,MAAM,KAAK,SAAS,CAAC;4BACnB,OAAO,YAAY,KAAK;4BACxB,UAAU,YAAY,QAAQ;wBAChC;oBACF;oBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;wBAChB,MAAM,QAAQ,MAAM,SAAS,IAAI;wBACjC,MAAM,IAAI,MAAM,MAAM,KAAK,IAAI;oBACjC;oBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;oBAEhC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE;wBAC7B,MAAM,IAAI,MAAM;oBAClB;oBAEA,OAAO;wBACL,IAAI,KAAK,IAAI,CAAC,EAAE;wBAChB,MAAM,KAAK,IAAI,CAAC,IAAI;wBACpB,OAAO,KAAK,IAAI,CAAC,KAAK;wBACtB,MAAM,KAAK,IAAI,CAAC,IAAI;wBACpB,OAAO,KAAK,KAAK;oBACnB;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,yBAAyB;oBACvC,MAAM,IAAI,MAAM,iBAAiB,QAAQ,MAAM,OAAO,GAAG;gBAC3D;YACF;QACF;KACD;IACD,OAAO;QACL,QAAQ;QACR,OAAO;IACT;IACA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;gBAClB,MAAM,IAAI,GAAG,KAAK,IAAI;gBACtB,MAAM,WAAW,GAAG,KAAK,KAAK;YAChC;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,SAAS,MAAM;gBACjB,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;gBAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,IAAI;gBAC9B,QAAQ,WAAW,GAAG,MAAM,WAAW;YACzC;YACA,OAAO;QACT;IACF;IACA,SAAS;QACP,UAAU;QACV,QAAQ,KAAK,KAAK,KAAK;IACzB;IACA,OAAO,oDAAyB;AAClC","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Desktop/residencia/frontend/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\"\nimport { authOptions } from \"@/lib/auth\"\n\nconst handler = NextAuth(authOptions)\n\nexport { handler as GET, handler as POST }\n\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE,oHAAA,CAAA,cAAW","debugId":null}}]
}